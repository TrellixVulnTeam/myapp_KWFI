{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freelymachine2486\\\\myapp\\\\src\\\\components\\\\dropdown\\\\dropdown.component.jsx\";\nimport React from 'react'; // import 'font-awesome/css/font-awesome.min.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faThumbsUp } from '@fortawesome/free-solid-svg-icons'; // var FontAwesome = require('@fortawesome/react-fontawesome')\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleList = () => {\n      this.setState(prevState => ({\n        isListOpen: !prevState.isListOpen\n      }));\n    };\n\n    this.selectItem = item => {\n      const {\n        resetThenSet\n      } = this.props;\n      const {\n        name,\n        id\n      } = item;\n      this.setState({\n        headerTitle: name,\n        isListOpen: false\n      }, () => resetThenSet(id));\n    };\n\n    this.state = {\n      isListOpen: false,\n      headerTitle: this.props.title\n    };\n  }\n\n  render() {\n    const {\n      isListOpen,\n      headerTitle\n    } = this.state;\n    const {\n      countries\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\",\n        onClick: this.toggleList,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: headerTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), isListOpen ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faThumbsUp,\n          className: \"angle-up\",\n          size: \"50x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"angle-down\",\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), isListOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        role: \"list\",\n        children: countries.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"list-group\",\n          \"aria-label\": \"Default select example\",\n          type: \"button\",\n          onClick: () => this.selectItem(item),\n          children: [item.name, ' ', item.selected && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 59\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Dropdown;","map":{"version":3,"sources":["C:/Users/freelymachine2486/myapp/src/components/dropdown/dropdown.component.jsx"],"names":["React","FontAwesomeIcon","faCheck","faThumbsUp","Dropdown","Component","constructor","props","toggleList","setState","prevState","isListOpen","selectItem","item","resetThenSet","name","id","headerTitle","state","title","render","countries","map","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,mCAApC,C,CACA;;;AAGA,OAAO,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,UAPmB,GAON,MAAM;AACf,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBC,QAAAA,UAAU,EAAE,CAACD,SAAS,CAACC;AADC,OAAL,CAAvB;AAGH,KAXkB;;AAAA,SAYnBC,UAZmB,GAYLC,IAAD,IAAU;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKP,KAA7B;AACA,YAAM;AAAEQ,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAgBH,IAAtB;AAEA,WAAKJ,QAAL,CAAc;AACVQ,QAAAA,WAAW,EAAEF,IADH;AAEVJ,QAAAA,UAAU,EAAE;AAFF,OAAd,EAGG,MAAMG,YAAY,CAACE,EAAD,CAHrB;AAIH,KApBkB;;AAEf,SAAKE,KAAL,GAAa;AACTP,MAAAA,UAAU,EAAE,KADH;AAETM,MAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWY;AAFf,KAAb;AAIH;;AAeDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,UAAF;AAAcM,MAAAA;AAAd,QAA8B,KAAKC,KAAzC;AACA,UAAM;AAACG,MAAAA;AAAD,QAAc,KAAKd,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,EAFd;AAGI,QAAA,OAAO,EAAE,KAAKC,UAHlB;AAAA,gCAIQ;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,oBAAmBS;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAJR,EAKSN,UAAU,gBACT,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAER,UAAvB;AAAmC,UAAA,SAAS,EAAC,UAA7C;AAAwD,UAAA,IAAI,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADS,gBAEV,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,YAA3B;AAAwC,UAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAPT;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAUSQ,UAAU,iBACP;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,IAAI,EAAC,MAAnC;AAAA,kBACKU,SAAS,CAACC,GAAV,CAAeT,IAAD,iBACX;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,wBAAW,wBAA1C;AACI,UAAA,IAAI,EAAC,QADT;AAGI,UAAA,OAAO,EAAE,MAAM,KAAKD,UAAL,CAAgBC,IAAhB,CAHnB;AAAA,qBAISA,IAAI,CAACE,IAJd,EAKS,GALT,EAMSF,IAAI,CAACU,QAAL,iBAAiB,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAErB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAN1B;AAAA,WAESW,IAAI,CAACG,EAFd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AApDyC;AAsD9C,eAAeZ,QAAf","sourcesContent":["import React from 'react'\r\n// import 'font-awesome/css/font-awesome.min.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\r\n// var FontAwesome = require('@fortawesome/react-fontawesome')\r\n\r\n\r\nexport class Dropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isListOpen: false,\r\n            headerTitle: this.props.title\r\n        }\r\n    }\r\n    toggleList = () => {\r\n        this.setState(prevState => ({\r\n            isListOpen: !prevState.isListOpen\r\n        }))\r\n    }\r\n    selectItem = (item) => {\r\n        const { resetThenSet } =this.props;\r\n        const { name, id, } = item;\r\n\r\n        this.setState({\r\n            headerTitle: name,\r\n            isListOpen: false,\r\n        }, () => resetThenSet(id,))\r\n    }\r\n    render (){\r\n        const { isListOpen, headerTitle } = this.state\r\n        const {countries} = this.props\r\n        return (\r\n            <div className=\"form-control\">\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"\"\r\n                    onClick={this.toggleList}>\r\n                        <div className=\"\">{headerTitle}</div>\r\n                        {isListOpen\r\n                        ? <FontAwesomeIcon icon={faThumbsUp} className=\"angle-up\" size=\"50x\"/>\r\n                        :<FontAwesomeIcon className=\"angle-down\" size=\"2x\"/>}\r\n                    </button>\r\n                    {isListOpen && (\r\n                        <div className=\"form-control\" role=\"list\">\r\n                            {countries.map((item) => (\r\n                                <button className=\"list-group\" aria-label=\"Default select example\"\r\n                                    type=\"button\"\r\n                                    key={item.id}\r\n                                    onClick={() => this.selectItem(item)}>\r\n                                        {item.name}\r\n                                        {' '}\r\n                                        {item.selected && <FontAwesomeIcon icon={faCheck}/>}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}